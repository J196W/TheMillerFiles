#BlueJ class context
comment0.params=
comment0.target=void\ perform()
comment1.params=
comment1.target=void\ perform()
comment10.params=
comment10.target=void\ makeNewList()
comment10.text=\n\ makeNewList\ creates\ a\ new\ list\ to\ be\ sorted\ based\ upon\ the\n\ settings\ of\ the\ GUI\ widgets\n\n
comment11.params=
comment11.target=void\ setListWindowFromSlider()
comment11.text=\n\n\ Slider\ manipulation\ actions\n\ \t\n\ The\ slider\ is\ logarithmic,\ not\ linear.\ \ A\ slider\ value\ of\ N\ represents\n\ a\ list\ size\ of\ 2^(N/100)\ \ These\ functions\ simply\ synchronize\ the\ list\n\ size\ slider\ and\ the\ associated\ text\ view\ according\ to\ that\ equivalence\n\n
comment12.params=
comment12.target=void\ setSliderFromListWindow()
comment2.params=
comment2.target=void\ perform()
comment3.params=
comment3.target=void\ perform()
comment4.params=args
comment4.target=void\ main(java.lang.String[])
comment4.text=\ \n\ Standard\ JPT\ main\ function\n
comment5.params=
comment5.target=SortDetective()
comment6.params=
comment6.target=void\ perform()
comment7.params=
comment7.target=void\ perform()
comment8.params=se\ sortName
comment8.target=void\ runExperiment(SortingExperiment,\ java.lang.String)
comment9.params=list
comment9.target=boolean\ isSorted(int[])
comment9.text=\n\ isSorted\ returns\ true\ iff\ the\ array\ list\ is\ in\ monotonically\ \n\ (but\ not\ strictly)\ increasing\ order\n\n
numComments=13
